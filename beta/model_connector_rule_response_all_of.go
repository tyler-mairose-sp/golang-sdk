/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package beta

import (
	"encoding/json"
)

// checks if the ConnectorRuleResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorRuleResponseAllOf{}

// ConnectorRuleResponseAllOf struct for ConnectorRuleResponseAllOf
type ConnectorRuleResponseAllOf struct {
	// the ID of the rule
	Id string `json:"id"`
	// an ISO 8601 UTC timestamp when this rule was created
	Created string `json:"created"`
	// an ISO 8601 UTC timestamp when this rule was last modified
	Modified NullableString `json:"modified,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConnectorRuleResponseAllOf ConnectorRuleResponseAllOf

// NewConnectorRuleResponseAllOf instantiates a new ConnectorRuleResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorRuleResponseAllOf(id string, created string) *ConnectorRuleResponseAllOf {
	this := ConnectorRuleResponseAllOf{}
	this.Id = id
	this.Created = created
	return &this
}

// NewConnectorRuleResponseAllOfWithDefaults instantiates a new ConnectorRuleResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorRuleResponseAllOfWithDefaults() *ConnectorRuleResponseAllOf {
	this := ConnectorRuleResponseAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *ConnectorRuleResponseAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConnectorRuleResponseAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConnectorRuleResponseAllOf) SetId(v string) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *ConnectorRuleResponseAllOf) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ConnectorRuleResponseAllOf) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ConnectorRuleResponseAllOf) SetCreated(v string) {
	o.Created = v
}

// GetModified returns the Modified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectorRuleResponseAllOf) GetModified() string {
	if o == nil || isNil(o.Modified.Get()) {
		var ret string
		return ret
	}
	return *o.Modified.Get()
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectorRuleResponseAllOf) GetModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Modified.Get(), o.Modified.IsSet()
}

// HasModified returns a boolean if a field has been set.
func (o *ConnectorRuleResponseAllOf) HasModified() bool {
	if o != nil && o.Modified.IsSet() {
		return true
	}

	return false
}

// SetModified gets a reference to the given NullableString and assigns it to the Modified field.
func (o *ConnectorRuleResponseAllOf) SetModified(v string) {
	o.Modified.Set(&v)
}
// SetModifiedNil sets the value for Modified to be an explicit nil
func (o *ConnectorRuleResponseAllOf) SetModifiedNil() {
	o.Modified.Set(nil)
}

// UnsetModified ensures that no value is present for Modified, not even an explicit nil
func (o *ConnectorRuleResponseAllOf) UnsetModified() {
	o.Modified.Unset()
}

func (o ConnectorRuleResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorRuleResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created"] = o.Created
	if o.Modified.IsSet() {
		toSerialize["modified"] = o.Modified.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectorRuleResponseAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varConnectorRuleResponseAllOf := _ConnectorRuleResponseAllOf{}

	if err = json.Unmarshal(bytes, &varConnectorRuleResponseAllOf); err == nil {
		*o = ConnectorRuleResponseAllOf(varConnectorRuleResponseAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created")
		delete(additionalProperties, "modified")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectorRuleResponseAllOf struct {
	value *ConnectorRuleResponseAllOf
	isSet bool
}

func (v NullableConnectorRuleResponseAllOf) Get() *ConnectorRuleResponseAllOf {
	return v.value
}

func (v *NullableConnectorRuleResponseAllOf) Set(val *ConnectorRuleResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorRuleResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorRuleResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorRuleResponseAllOf(val *ConnectorRuleResponseAllOf) *NullableConnectorRuleResponseAllOf {
	return &NullableConnectorRuleResponseAllOf{value: val, isSet: true}
}

func (v NullableConnectorRuleResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorRuleResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


