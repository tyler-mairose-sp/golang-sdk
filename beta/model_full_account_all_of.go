/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package beta

import (
	"encoding/json"
)

// checks if the FullAccountAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FullAccountAllOf{}

// FullAccountAllOf struct for FullAccountAllOf
type FullAccountAllOf struct {
	// Whether this account belongs to an authoritative source
	Authoritative *bool `json:"authoritative,omitempty"`
	// Whether this account is for the IdentityNow source
	SystemAccount *bool `json:"systemAccount,omitempty"`
	// True if this account is not correlated to an identity
	Uncorrelated *bool `json:"uncorrelated,omitempty"`
	// A string list containing the owning source's features
	Features *string `json:"features,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FullAccountAllOf FullAccountAllOf

// NewFullAccountAllOf instantiates a new FullAccountAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullAccountAllOf() *FullAccountAllOf {
	this := FullAccountAllOf{}
	return &this
}

// NewFullAccountAllOfWithDefaults instantiates a new FullAccountAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullAccountAllOfWithDefaults() *FullAccountAllOf {
	this := FullAccountAllOf{}
	return &this
}

// GetAuthoritative returns the Authoritative field value if set, zero value otherwise.
func (o *FullAccountAllOf) GetAuthoritative() bool {
	if o == nil || isNil(o.Authoritative) {
		var ret bool
		return ret
	}
	return *o.Authoritative
}

// GetAuthoritativeOk returns a tuple with the Authoritative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullAccountAllOf) GetAuthoritativeOk() (*bool, bool) {
	if o == nil || isNil(o.Authoritative) {
		return nil, false
	}
	return o.Authoritative, true
}

// HasAuthoritative returns a boolean if a field has been set.
func (o *FullAccountAllOf) HasAuthoritative() bool {
	if o != nil && !isNil(o.Authoritative) {
		return true
	}

	return false
}

// SetAuthoritative gets a reference to the given bool and assigns it to the Authoritative field.
func (o *FullAccountAllOf) SetAuthoritative(v bool) {
	o.Authoritative = &v
}

// GetSystemAccount returns the SystemAccount field value if set, zero value otherwise.
func (o *FullAccountAllOf) GetSystemAccount() bool {
	if o == nil || isNil(o.SystemAccount) {
		var ret bool
		return ret
	}
	return *o.SystemAccount
}

// GetSystemAccountOk returns a tuple with the SystemAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullAccountAllOf) GetSystemAccountOk() (*bool, bool) {
	if o == nil || isNil(o.SystemAccount) {
		return nil, false
	}
	return o.SystemAccount, true
}

// HasSystemAccount returns a boolean if a field has been set.
func (o *FullAccountAllOf) HasSystemAccount() bool {
	if o != nil && !isNil(o.SystemAccount) {
		return true
	}

	return false
}

// SetSystemAccount gets a reference to the given bool and assigns it to the SystemAccount field.
func (o *FullAccountAllOf) SetSystemAccount(v bool) {
	o.SystemAccount = &v
}

// GetUncorrelated returns the Uncorrelated field value if set, zero value otherwise.
func (o *FullAccountAllOf) GetUncorrelated() bool {
	if o == nil || isNil(o.Uncorrelated) {
		var ret bool
		return ret
	}
	return *o.Uncorrelated
}

// GetUncorrelatedOk returns a tuple with the Uncorrelated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullAccountAllOf) GetUncorrelatedOk() (*bool, bool) {
	if o == nil || isNil(o.Uncorrelated) {
		return nil, false
	}
	return o.Uncorrelated, true
}

// HasUncorrelated returns a boolean if a field has been set.
func (o *FullAccountAllOf) HasUncorrelated() bool {
	if o != nil && !isNil(o.Uncorrelated) {
		return true
	}

	return false
}

// SetUncorrelated gets a reference to the given bool and assigns it to the Uncorrelated field.
func (o *FullAccountAllOf) SetUncorrelated(v bool) {
	o.Uncorrelated = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *FullAccountAllOf) GetFeatures() string {
	if o == nil || isNil(o.Features) {
		var ret string
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullAccountAllOf) GetFeaturesOk() (*string, bool) {
	if o == nil || isNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *FullAccountAllOf) HasFeatures() bool {
	if o != nil && !isNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given string and assigns it to the Features field.
func (o *FullAccountAllOf) SetFeatures(v string) {
	o.Features = &v
}

func (o FullAccountAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FullAccountAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Authoritative) {
		toSerialize["authoritative"] = o.Authoritative
	}
	if !isNil(o.SystemAccount) {
		toSerialize["systemAccount"] = o.SystemAccount
	}
	if !isNil(o.Uncorrelated) {
		toSerialize["uncorrelated"] = o.Uncorrelated
	}
	if !isNil(o.Features) {
		toSerialize["features"] = o.Features
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FullAccountAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varFullAccountAllOf := _FullAccountAllOf{}

	if err = json.Unmarshal(bytes, &varFullAccountAllOf); err == nil {
		*o = FullAccountAllOf(varFullAccountAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "authoritative")
		delete(additionalProperties, "systemAccount")
		delete(additionalProperties, "uncorrelated")
		delete(additionalProperties, "features")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFullAccountAllOf struct {
	value *FullAccountAllOf
	isSet bool
}

func (v NullableFullAccountAllOf) Get() *FullAccountAllOf {
	return v.value
}

func (v *NullableFullAccountAllOf) Set(val *FullAccountAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableFullAccountAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableFullAccountAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullAccountAllOf(val *FullAccountAllOf) *NullableFullAccountAllOf {
	return &NullableFullAccountAllOf{value: val, isSet: true}
}

func (v NullableFullAccountAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullAccountAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


